<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="62" started-at="2016-10-25T15:14:00Z" finished-at="2016-10-25T15:14:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="62" started-at="2016-10-25T15:14:00Z" finished-at="2016-10-25T15:14:00Z">
      <class name="TestNGPrac.TestngAnnotation3">
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethod1Class3 status=SUCCESS method=TestngAnnotation3.TestMethod1Class3()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="TestMethod1Class3()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="TestMethod1Class3" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethod1Class3 -->
        <test-method status="PASS" signature="TestMethod2Class3()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="TestMethod2Class3" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMethod2Class3 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMethod2Class3 status=SUCCESS method=TestngAnnotation3.TestMethod2Class3()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- TestNGPrac.TestngAnnotation3 -->
      <class name="TestNGPrac.TestngAnnotation2">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="beforeTest" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="beforeTest" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="failMethodClass2()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="failMethodClass2" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [String for  Test] but found [String for Test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [String for  Test] but found [String for Test]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at TestNGPrac.TestngAnnotation2.failMethodClass2(TestngAnnotation2.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failMethodClass2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="afterMethod" is-config="true" duration-ms="15" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passMethodClass2 status=SUCCESS method=TestngAnnotation2.passMethodClass2()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failMethodClass2 status=FAILURE method=TestngAnnotation2.failMethodClass2()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="passMethodClass2()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="passMethodClass2" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passMethodClass2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestNGPrac.TestngAnnotation2 -->
      <class name="TestNGPrac.TestngAnnotation1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="beforeSuite" is-config="true" duration-ms="32" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="beforeMethod" is-config="true" duration-ms="15" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="afterMethod" is-config="true" duration-ms="16" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCaseFail status=FAILURE method=TestngAnnotation1.testCaseFail()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testCaseFail()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="testCaseFail" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Check  String] but found [Check String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Check  String] but found [Check String]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at TestNGPrac.TestngAnnotation1.testCaseFail(TestngAnnotation1.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseFail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCasePass status=SUCCESS method=TestngAnnotation1.testCasePass()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCasePass()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="testCasePass" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCasePass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestNGPrac.TestngAnnotation1@1d15f18]" name="afterSuite" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestNGPrac.TestngAnnotation3@9f5c0d]" name="afterSuite" is-config="true" duration-ms="297" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestNGPrac.TestngAnnotation2@1695df3]" name="afterSuite" is-config="true" duration-ms="0" started-at="2016-10-25T20:44:00Z" finished-at="2016-10-25T20:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestNGPrac.TestngAnnotation1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
